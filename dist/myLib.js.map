{"version":3,"file":"myLib.js","sources":["../src/string/isCharType.js","../src/math/round.js","../src/string/arrayFromCommaSeparatedList.js","../src/dom/arrayFromQuery.js","../src/array/arrayIntersection.js","../src/console/greet.js","../src/object/hasOwnProperty.js","../src/string/isStringType.js","../src/dom/isAttachedToDom.js","../src/number/isEqualSigns.js","../src/regex/isExactMatch.js","../src/type/isPrimitive.js","../src/number/isUsableNumber.js"],"sourcesContent":["/**\n * Test value for being a character; a string with a length of one\n * @param {string} char\n * @returns {boolean} is a single character\n */\nconst isChar = (char) => {\n    return Boolean(char && typeof char === 'string' && char.length === 1)\n}\n\n/**\n * Test value for being a string representation of a digit\n * @param {string} char\n * @returns {boolean} is a number 0-9\n */\nconst isDigit = (char) => {\n    return isChar(char) && Boolean(char.match(/[0-9]/))\n}\n\n/**\n * Test value for being a letter\n * @param {string} char\n * @returns {boolean} char is a letter\n */\nconst isLetter = (char) => {\n    return isChar(char) && char.toLowerCase() !== char.toUpperCase()\n}\n\n/**\n * Test value for being a lowercase letter\n * @param {string} char\n * @returns {boolean} char is a lower-case letter\n */\nconst isLower = (char) => {\n    return (\n        isChar(char) &&\n        char === char.toLowerCase() &&\n        char !== char.toUpperCase()\n    )\n}\n\n/**\n * Test value for being an uppercase letter\n * @param {string} char\n * @returns {boolean} char is a upper-case letter\n */\nconst isUpper = (char) => {\n    return (\n        isChar(char) &&\n        char === char.toUpperCase() &&\n        char !== char.toLowerCase()\n    )\n}\n\nexport { isChar, isDigit, isLetter, isLower, isUpper }\n","/**\n * Round at decimals\n * @param {number} origin - any number to round\n * @param {number} decimals - number of decimals to round at\n * @returns {number} the rounded number\n */\nconst roundAtDecimals = function (origin, decimals) {\n    if (origin < 1 + 'e-' + decimals && origin > -1 + 'e-' + decimals) {\n        return 0\n    }\n    // https://www.jacklmoore.com/notes/rounding-in-javascript/\n    return Number(Math.round(origin + 'e' + decimals) + 'e-' + decimals)\n}\n\n/**\n * Round at digits; round with significance\n * @param {number} origin - any number to round\n * @param {number} digits - number of significant digits to round at\n * @returns {number} the rounded number\n */\nconst roundAtDigits = function (origin, digits) {\n    const exponent = Math.floor(Math.log(Math.abs(origin)) / Math.log(10))\n    const coefficient = origin / Math.pow(10, exponent)\n    const rounded = roundAtDecimals(coefficient, digits - 1)\n\n    return Number(rounded + 'e' + exponent)\n}\n\nexport { roundAtDecimals, roundAtDigits }\n","/**\n * Process comma separated list to a sanitised array with normalised strings\n * @param {string} commaSeperatedList\n * @returns {string[]} array with separate strings\n */\nconst arrayFromCommaSeparatedList = function (commaSeparatedList) {\n    let list = commaSeparatedList.split(',')\n    // normalise\n    let trimmed = list.map((item) => item.trim().replace(/\\s+/g, ' '))\n    // sanitise\n    return trimmed.filter((item) => {\n        return item.length\n    })\n}\n\nexport { arrayFromCommaSeparatedList }\n","/**\n * Create a genuine array from a css-query\n * @param {string} cssQuery;\n * @returns {Node[]} array with HTMLElements\n */\nconst arrayFromQuery = function (cssQuery) {\n    // the push.apply operation is in most browsers among the fastest\n    // https://jsperf.com/nodelist-to-array/27\n    let elementArray = []\n    elementArray.push.apply(elementArray, document.querySelectorAll(cssQuery))\n    return elementArray\n}\n\nexport { arrayFromQuery }\n","/**\n * Find the intersection of two arrays\n * @param {Array} array1\n * @param {Array} array2\n * @return {Array}\n */\nconst arrayIntersection = function (array1, array2) {\n    let lookup = {}\n    array1.forEach((member) => (lookup[member] = 1))\n    return array2.filter((member) => {\n        if (lookup[member] === 1) {\n            delete lookup[member]\n            return member\n        }\n    })\n}\nexport { arrayIntersection }\n","/**\n * The sake of package\n * @returns {void} log the console\n */\nconst greet = () => {\n    // The epic proof of getting through\n    console.log('Hello World!')\n}\n\nexport { greet }\n\n/*\ndependents on npm\n\nmoddi/mark-dream-app\n\ndependents on github\n\nkapunahelewong / library-test-app\ndubzzz / fast-check.github.com\nDimakzela / angular-library-example\nmrucelum / type-for-input-app\nd4046949 / KanBanBoard\nbengabo / angular-library\ndarress / angular9_lib_bugs\nLukasHechenberger / sample-svelte-scss-lib\noOntheway / angular-library\ndubzzz / cra-esm-bug\nfranleplant / inline-react-package-example\nmariosimao / vuetify-error\ndinesh-krish / ionic-angular\nJetBrains / intellij-plugins\nMadz96 / main-app-project\nMadz96 / library-project\nsc0tt5 / angular-library-starter\nripplejb / AngularLibraryUser\nbdsabian / my-lib\narcanis / yarn-pnp-examples\nBrmm / rush-tsc-example\nmattgek / realdolmen_music\nerrakesh2009 / NodeJSDay2\nbochen2014 / webpack4-example\npuresmash / simple-lerna\nsod / npm5-not-a-child\nmanfredsteyer / npm_packages_for_angular\nmanfredsteyer / angular-enterprise-dwx-2017\nmarkbrocato / ext-react-library-example\nzverev / browserify-test\nheltonandreazza / proj\nmanfredsteyer / angular_advanced_enterjs_2017\n\n*/\n","/**\n * Check for existence of property in object\n * @param {Object} object\n * @param {String} prop\n * @returns {Boolean} hasIt - object has that own property\n */\nconst hasOwnProperty = function (object, prop) {\n    const hasIt = Object.prototype.hasOwnProperty.call(object, prop)\n    return hasIt\n}\n\nexport { hasOwnProperty }\n","import { isDigit, isLetter } from './isCharType'\n\n/**\n * Test for being a string consisting of letters and/or digits\n * @param {string} word\n * @returns {boolean} consists of letters and/or digits only\n */\nconst isAlphaNumeric = (word) => {\n    return (\n        word &&\n        word.split &&\n        !word.split('').some((char) => {\n            return !(isLetter(char) || isDigit(char))\n        })\n    )\n}\n\nexport { isAlphaNumeric }\n","/**\n * Check node for being part of the DOM\n * @param {Node} node\n * @returns {boolean} true when the node is on the webpage\n */\nconst isAttachedToDom = function (elm) {\n    return (\n        elm &&\n        (elm.getRootNode() instanceof Document ||\n            elm.getRootNode() instanceof ShadowRoot)\n    )\n}\n\nexport { isAttachedToDom }\n","/**\n * Check all arguments for being a number with the same sign\n * @param {Arguments} numeric arguments\n * @return {boolean} equality\n */\nconst isEqualSigns = function () {\n    let positives = [...arguments].filter((arg) => arg >= 0)\n    let negatives = [...arguments].filter((arg) => arg <= 0)\n    return (\n        positives.length === arguments.length ||\n        negatives.length === arguments.length\n    )\n}\n\nexport { isEqualSigns }\n","/**\n * Check for a match covering the string entirely\n * @param {string} word\n * @param {RegExp} regex\n * @returns {boolean}\n */\nconst isExactMatch = (word, regex) => {\n    const match = word.match(regex)\n    const result = match && match[0] === word\n    return result\n}\n\nexport { isExactMatch }\n","/**\n * Check value for being a primitive\n * @param {any} value - any value to check\n * @returns {boolean} is a primitive\n */\nconst isPrimitive = function (value) {\n    return (\n        typeof value === 'string' ||\n        typeof value === 'number' ||\n        typeof value === 'boolean'\n    )\n}\n\nexport { isPrimitive }\n","/**\n * Test for values with which calculations can be done\n * @param {Arguments} anonymus - one or more values to test\n * @returns {boolean} every argument is a useable number\n */\nconst isUsableNumber = function () {\n    let isUsable = Boolean(arguments.length)\n    Array.from(arguments).forEach((value) => {\n        isUsable =\n            isUsable && typeof value === 'number' && Number.isFinite(value)\n    })\n    return isUsable\n}\n\nexport { isUsableNumber }\n"],"names":["isChar","char","Boolean","length","isDigit","match","isLetter","toLowerCase","toUpperCase","roundAtDecimals","origin","decimals","Number","Math","round","commaSeparatedList","split","map","item","trim","replace","filter","cssQuery","elementArray","push","apply","document","querySelectorAll","array1","array2","lookup","forEach","member","console","log","object","prop","Object","prototype","hasOwnProperty","call","word","some","elm","getRootNode","Document","ShadowRoot","positives","arguments","arg","negatives","regex","value","isUsable","Array","from","isFinite","digits","exponent","floor","abs","coefficient","pow","rounded"],"mappings":"yMAKMA,EAAUC,GACLC,QAAQD,GAAwB,iBAATA,GAAqC,IAAhBA,EAAKE,QAQtDC,EAAWH,GACND,EAAOC,IAASC,QAAQD,EAAKI,MAAM,UAQxCC,EAAYL,GACPD,EAAOC,IAASA,EAAKM,gBAAkBN,EAAKO,cClBjDC,EAAkB,SAAUC,EAAQC,GACtC,OAAID,EAAS,MAAWC,GAAYD,EAAS,OAAYC,EAC9C,EAGJC,OAAOC,KAAKC,MAAMJ,EAAS,IAAMC,GAAY,KAAOA,kCCN3B,SAAUI,GAK1C,OAJWA,EAAmBC,MAAM,KAEjBC,IAAKC,GAASA,EAAKC,OAAOC,QAAQ,OAAQ,MAE9CC,OAAQH,GACZA,EAAKf,0BCNG,SAAUmB,GAG7B,IAAIC,EAAe,GAEnB,OADAA,EAAaC,KAAKC,MAAMF,EAAcG,SAASC,iBAAiBL,IACzDC,uBCJe,SAAUK,EAAQC,GACxC,IAAIC,EAAS,GAEb,OADAF,EAAOG,QAASC,GAAYF,EAAOE,GAAU,GACtCH,EAAOR,OAAQW,IAClB,GAAuB,IAAnBF,EAAOE,GAEP,cADOF,EAAOE,GACPA,aCRL,KAEVC,QAAQC,IAAI,kCCAO,SAAUC,EAAQC,GAErC,OADcC,OAAOC,UAAUC,eAAeC,KAAKL,EAAQC,qBCAvCK,GAEhBA,GACAA,EAAKzB,QACJyB,EAAKzB,MAAM,IAAI0B,KAAMzC,KACTK,EAASL,IAASG,EAAQH,uBCPvB,SAAU0C,GAC9B,OACIA,IACCA,EAAIC,wBAAyBC,UAC1BF,EAAIC,wBAAyBE,mDCJpB,WACjB,IAAIC,EAAY,IAAIC,WAAW3B,OAAQ4B,GAAQA,GAAO,GAClDC,EAAY,IAAIF,WAAW3B,OAAQ4B,GAAQA,GAAO,GACtD,OACIF,EAAU5C,SAAW6C,UAAU7C,QAC/B+C,EAAU/C,SAAW6C,UAAU7C,uBCJlB,CAACsC,EAAMU,KACxB,MAAM9C,EAAQoC,EAAKpC,MAAM8C,GAEzB,OADe9C,GAASA,EAAM,KAAOoC,0BVwBxBxC,GAETD,EAAOC,IACPA,IAASA,EAAKM,eACdN,IAASA,EAAKO,4BW/BF,SAAU4C,GAC1B,MACqB,iBAAVA,GACU,iBAAVA,GACU,kBAAVA,aXoCEnD,GAETD,EAAOC,IACPA,IAASA,EAAKO,eACdP,IAASA,EAAKM,+BY5CC,WACnB,IAAI8C,EAAWnD,QAAQ8C,UAAU7C,QAKjC,OAJAmD,MAAMC,KAAKP,WAAWjB,QAASqB,IAC3BC,EACIA,GAA6B,iBAAVD,GAAsBxC,OAAO4C,SAASJ,KAE1DC,uCXSW,SAAU3C,EAAQ+C,GACpC,MAAMC,EAAW7C,KAAK8C,MAAM9C,KAAKqB,IAAIrB,KAAK+C,IAAIlD,IAAWG,KAAKqB,IAAI,KAC5D2B,EAAcnD,EAASG,KAAKiD,IAAI,GAAIJ,GACpCK,EAAUtD,EAAgBoD,EAAaJ,EAAS,GAEtD,OAAO7C,OAAOmD,EAAU,IAAML"}